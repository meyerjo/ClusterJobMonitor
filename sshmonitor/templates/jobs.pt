<!DOCTYPE html>
<html lang="${request.locale_name}">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="pyramid web application">
    <meta name="author" content="Pylons Project">
    <link rel="shortcut icon" href="${request.static_url('sshmonitor:static/pyramid-16x16.png')}">

    <title>Starter Scaffold for The Pyramid Web Framework</title>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.3/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js"></script>

    <!-- Bootstrap core CSS -->
    <link href="//oss.maxcdn.com/libs/twitter-bootstrap/3.0.3/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">


    <!-- MetisMenu CSS -->
    <link href="${request.static_url('sshmonitor:static/bower_components/metisMenu/dist/metisMenu.min.css')}" rel="stylesheet">

    <!-- Timeline CSS -->
    <link href="${request.static_url('sshmonitor:static/dist/css/timeline.css')}" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="${request.static_url('sshmonitor:static/dist/css/sb-admin-2.css')}" rel="stylesheet">

    <!-- Morris Charts CSS -->
    <link href="${request.static_url('sshmonitor:static/bower_components/morrisjs/morris.css')}" rel="stylesheet">


    <link href="${request.static_url('sshmonitor:static/dist/jsoneditor.min.css')}" rel="stylesheet">

    <script src="${request.static_url('sshmonitor:static/dist/jsoneditor.min.js')}"></script>


    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="//oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
    <script src="//oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
    <![endif]-->

    <script src="${request.static_url('sshmonitor:static/js/job_submission.js')}"></script>

    <style>
        .error {
            display:none;
        }

        .selectiontype {
            display: none;
        }

        .active {
            display: block;
        }
    </style>
    <script type="text/javascript">

        $(document).ready(function () {
            $.ajax({
                url: '${request.route_url('send_job', action='scripts')}'
            }).done(function(data) {
                $(data).each(function (i, element) {
                    $('form .scriptselection').append($('<option>', {
                        text: element[0],
                        value: JSON.stringify({'scriptpath': element[1], 'scriptname': element[0]})
                    }));
                });
            });

            $('[name=\'addvariabletoenvironment\']').on('click', function() {
                var json = window.editor.get();
                var parent = $(this).closest('.panel-body');

                var new_variablename = $('#new_variablename').val()
                if (new_variablename == '') {
                    console.log('Name is not acquired')
                    return;
                }
                var selectedtype = $(parent).find('.selectiontype.active').attr('id');

                if (selectedtype == 'integer') {

                    var mininteger = $(parent).find('[name=\'mininteger\']').val();
                    var maxinteger = $(parent).find('[name=\'maxinteger\']').val();
                    var stepinteger = $(parent).find('[name=\'stepinteger\']').val();
                    mininteger = parseInt(mininteger);
                    maxinteger = parseInt(maxinteger);
                    stepinteger = parseInt(stepinteger);
                    console.log(stepinteger)
                    if (stepinteger == 0) {
                        stepinteger = 1;
                    }

                    if (mininteger >= maxinteger) {
                        console.log('Min-Integer can not be smaller than max-integer')
                        return;
                    }

                    var tmp = [];
                    for (var i = mininteger; i <= maxinteger; i+= stepinteger) {
                        tmp.push(i);
                    }
                    json[new_variablename] = tmp;
                    window.editor.set(json);
                } else {
                    console.log('selected type is unknown: ' + selectedtype)
                }
            });


            $('form .test_commands').unbind().on('click', function () {
                event.preventDefault();
                var parentForm = $(this).closest('form');
                var data = $(parentForm).serializeArray();

                $(data).each(function(i, item) {
                    if (item['name'] == 'walltime') {
                        item['value'] = '01:00:00';
                        $(parentForm).find('input[name=\'walltime\']').val('01:00:00');
                    }
                });

                $.ajax({
                    url: '${request.route_url('send_job', action='test')}',
                    method: "POST",
                    data: data
                }).done(function (data) {
                    if (data['error'] != null) {
                        $('.errormessage').css('display', 'block');
                        $('.errormessage').html(data['error'])
                    } else {
                        var element = $('<span>').html('Generated the following commands:<br/>');
                        $(data['commands']).each(function(i, elem) {
                            var label = $('<label>').html(elem);
                            var inp = $('<input>')
                                    .attr('type', 'checkbox')
                                    .attr('value', i)
                                    .attr('name', 'command')
                                    .prop('checked', true);
                            $(inp).prependTo(label);
                            $(label).appendTo(element)
                        });

                        $('#myModal .modal-footer button[name=\'sendcommands\']').unbind().on('click', function() {
                            alert('not yet implemented');
                            var selected_ids = $('#myModal .modal-body input[name=\'command\']:checked').map(function() { return parseInt($(this).val())}).get();

                            var data = $('.test_commands').closest('form').serializeArray();
                            data.push(new Object({'name': 'selectedcommands', 'value': JSON.stringify(selected_ids)}));
                            data.push(new Object({'name': 'requestresponse', 'value': 'json'}));
                            $.ajax({
                                url: '${request.route_url('send_job', action='send')}',
                                method: 'POST',
                                data: data
                            }).done(function (response) {
                                console.log(response);
                            }).error(function (response) {
                                console.log(response);
                                alert(response);
                            });
                        });

                        $('.errormessage').css('display', 'none');
                        $('#myModal .modal-body').html(element);
                        $('#myModal').modal('show');
                    }
                });
            });


            $('form.form_canceljob').submit(function( event ) {
                event.preventDefault();

                // show the user a modal to confirm the selection
                var data = $(this).serializeArray();
                // get the selected checkboxes
                var selected_jobs = $('form :checkbox:checked');

                if ($(data).length == 0){ return }

                var scriptnames = new Array();
                $(selected_jobs).each(function(i, data) {
                    var parentElement = $(data).closest('.jobname');
                    var header = $(parentElement).find('.panel-heading.jobname');
                    if ($(header).length == 1) {
                        scriptnames.push($(header[0]).html())
                    }
                });

                if ($(scriptnames).length != $(data).length) {
                    console.log('Number of scriptnames doesnt match data')
                    return
                }

                var overall = $('<span>').html('Do you really want to cancel these jobs?<br/>');
                $(selected_jobs).each(function(i, data) {
                    var element =  $('<label>')
                            .html(' JobID: ' + data['value'] + ' Scriptname: ' + $(scriptnames)[i]);
                    var inp = $('<input>')
                            .attr('type', 'checkbox')
                            .attr('value', data['value'])
                            .prop('checked', true);
                    $(inp).prependTo(element);
                    $(element).appendTo(overall);
                });
                var modalbody = $('#delete_confirmationmodal').find('.modal-body');
                $(modalbody[0]).html(overall);
                $('#delete_confirmationmodal').modal();

                $('#delete_confirmationmodal .btn-primary').on('click', function () {
                    console.log('send');
                    var body = $(modalbody[0]);
                    var selectedIds = new Array();
                    $(body).find(':checked').each(function(i, elem) {
                        selectedIds.push([$(elem).attr('value'), $(elem).attr('value')])
                    });
                    $.ajax({
                        url: '${request.route_url('cancel_job', jobid='json')}',
                        data: {'jobids': selectedIds},
                        method: 'POST'
                    }).done(function(respond) {
                        console.log(selectedIds)
                        $('#delete_confirmationmodal').modal('hide');
                    }).error(function(respond) {
                        $(this).remove();
                        $(this).closest('modal').find('modal-body')[0].html(respond);
                    }).always(function(respond) {
                        console.log(respond);
                    });
                });

                $('#delete_confirmationmodal div.modal-body :checkbox').on('change', function () {
                    $('#' + $(this).val() + ' :checkbox').prop('checked', $(this).prop('checked'));
                });
            });

            $('form :checkbox').on('change', function () {
                $('#selectedjobs').html($('form :checkbox:checked').length);
            });

            $('[name=\'sendvarstojob\']').on('click', function () {
                var json = window.editor.get();
                var keynames = Object.keys(json);

                if (Array.isArray(json)) {
                    $('[name=\'scriptvariables\']').val(JSON.stringify(json));
                } else {
                    // convert everything to arrays
                    $.each(json, function(key, value){
                        if (!Array.isArray(value)) {
                            json[key] = [JSON.stringify(value)];
                        }
                    });
                    var object_array = [];
                    $.each(json, function(key, value ) {
                        object_array.push(value);
                    });
                    var all_combinations = allCases(object_array, keynames);
                    $('[name=\'scriptvariables\']').val(JSON.stringify(all_combinations));
                    alert('Generated: ' + all_combinations.length+ ' combinations')
                }
            });

        });
    </script>
</head>

<body>
<!-- Navigation -->
<nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0">
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" tal:attributes="href request.route_url('jobs')">${project}</a>
    </div>

    <div class="navbar-default sidebar" role="navigation">
        <div class="sidebar-nav navbar-collapse">
            <ul class="nav" id="side-menu">
                <li>
                    <a tal:attributes="href request.route_url('dashboard')"><i class="fa fa-dashboard fa-fw"></i> Dashboard</a>
                </li>
                <li>
                    <a tal:attributes="href request.route_url('jobs')"><i class="fa fa-dashboard fa-fw"></i> Jobs</a>
                </li>
                <li>
                    <a tal:attributes="href request.route_url('filebrowser')"><i class="fa fa-files-o fa-fw"></i> FileBrowser</a>
                </li>
                <li>
                    <a tal:attributes="href request.route_url('filemonitor')"><i class="fa fa-desktop fa-fw"></i> File-Monitor</a>
                </li>
                <li>
                    <a tal:attributes="href request.route_url('jobarchive')">
                        <i class="fa fa-archive fa-fw"></i> Archive
                    </a>
                </li>
                <li>
                    <a tal:attributes="href request.route_url('sshconfiguration')"><i class="fa fa-cog fa-fw"></i> Configuration</a>
                </li>
            </ul>
        </div>
        <!-- /.sidebar-collapse -->
    </div>
    <!-- /.navbar-static-side -->
</nav>
<div id="page-wrapper">
    <tal:block tal:switch="python:isinstance(jobs, dict) and 'joborder' in jobs">
        <tal:block tal:case="True">
            <tal:block tal:define="global joborder jobs['joborder']"></tal:block>
        </tal:block>
        <tal:block tal:case="False">
            <tal:block tal:define="global joborder jobs.keys()"></tal:block>
        </tal:block>
    </tal:block>
    <tal:block tal:condition="python: 'error' in jobs">
        <div class="row">
            <div class="alert alert-danger" role="alert">
                <span tal:content="jobs['error']"></span>
            </div>
        </div>
    </tal:block>
    <div class="row">
        <div class="col-lg-3 col-md-6" tal:repeat="element joborder">
            <tal:block tal:condition="python: element == 'blocked'">
                <tal:block  tal:define="global classname 'panel-red'; global classicon 'fa-ban'"></tal:block>
            </tal:block>
            <tal:block tal:condition="python: element == 'active'">
                <tal:block  tal:define="global classname 'panel-green'; global classicon 'fa-play'"></tal:block>
            </tal:block>
            <tal:block tal:condition="python: element == 'eligible'">
                <tal:block  tal:define="global classname 'panel-default'; global classicon 'fa-pause'"></tal:block>
            </tal:block>
            <tal:block tal:condition="python: element == 'completed'">
                <tal:block  tal:define="global classname 'panel-info'; global classicon 'fa-check'"></tal:block>
            </tal:block>
            <tal:block tal:condition="not:exists:classname">
                <tal:block tal:define="global classname 'panel-primary'"></tal:block>
            </tal:block>
            <div class="panel ${classname}">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-xs-3">
                            <i class="fa fa-tasks fa-5x"></i>
                        </div>
                        <div class="col-xs-9 text-right">
                            <tal:block tal:define="global elementcounter 0">
                                <tal:block tal:repeat="(key, val) jobs['jobs'][element].items()">
                                    <tal:block tal:define="global elementcounter elementcounter + len(val)">
                                    </tal:block>
                                </tal:block>
                            </tal:block>
                            <div class="huge" tal:content="elementcounter"></div>
                            <div>
                                in category ${element}
                            </div>
                        </div>
                    </div>
                </div>
                <a href="#${element}">
                    <div class="panel-footer">
                    </div>
                </a>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-8">
            <form class="form_canceljob" tal:attributes="action request.route_url('cancel_job_basic')" method="POST">
                <div class="row">
                    <div class="col-sm-12">
                        <div class="input-group">
                            <span class="input-group-addon">
                                <i class="fa fa-check"></i><i class="fa fa-hashtag"></i><span id="selectedjobs">0</span>
                            </span>
                            <div class="input-group-btn">
                                <button type="submit" class="btn btn-warning .deletebutton">Delete</button>
                            </div>
                            <input type="text" disabled class="form-control" aria-label="...">
                        </div>
                    </div>
                </div>
                <tal:block  tal:repeat="orderelement joborder">
                    <tal:block tal:define="global jobclass orderelement; global jobelements jobs['jobs'][orderelement]"></tal:block>
                    <tal:block tal:condition="python: orderelement == 'blocked'">
                        <tal:block  tal:define="global classname 'panel-danger'; global classicon 'fa-ban'"></tal:block>
                    </tal:block>
                    <tal:block tal:condition="python: orderelement == 'active'">
                        <tal:block  tal:define="global classname 'panel-success'; global classicon 'fa-play'"></tal:block>
                    </tal:block>
                    <tal:block tal:condition="python: orderelement == 'eligible'">
                        <tal:block  tal:define="global classname 'panel-default'; global classicon 'fa-pause'"></tal:block>
                    </tal:block>
                    <tal:block tal:condition="python: orderelement == 'completed'">
                        <tal:block  tal:define="global classname 'panel-info'; global classicon 'fa-check'"></tal:block>
                    </tal:block>
                    <div class="panel ${classname}" tal:attributes="id orderelement">
                        <tal:block tal:define="global elementcounter 0">
                            <tal:block tal:repeat="(key, val) jobelements.items()">
                                <tal:block tal:define="global elementcounter elementcounter + len(val)">
                                </tal:block>
                            </tal:block>
                        </tal:block>
                        <div class="panel-heading">
                            <i class="fa ${classicon} fa-fw"></i> ${jobclass} (<span tal:content="elementcounter"></span>)
                        </div>
                        <!-- /.panel-heading -->
                        <div class="panel-body">
                            <div class="panel panel-default jobname" tal:repeat="key jobelements.keys()">
                                <div class="panel-heading jobname" tal:content="key"></div>
                                <div class="panel-body">
                                    <tal:block tal:repeat="row jobelements[key]">
                                        <tal:block tal:switch="python: ('CompletionCode' in row)">
                                            <tal:block tal:case="True">
                                                <tal:block tal:switch="python: str(row['CompletionCode']) != '0'">
                                                    <tal:block tal:case="True">
                                                        <tal:block tal:define="global panelcolor 'panel-danger'"></tal:block>
                                                    </tal:block>
                                                    <tal:block tal:case="False">
                                                        <tal:block tal:define="global panelcolor 'panel-default'"></tal:block>
                                                    </tal:block>
                                                </tal:block>
                                            </tal:block>
                                            <tal:block tal:case="False">
                                                <tal:block tal:define="global panelcolor 'panel-default'"></tal:block>
                                            </tal:block>
                                        </tal:block>
                                        <div class="panel ${panelcolor}" tal:attributes="id row['JobID']">
                                            <div class="panel-heading">
                                                <div class="row">
                                                    <div class="col-sm-12">
                                                        <div class="input-group">
                                                            <span class="input-group-addon">
                                                                <label>
                                                                    <input type="checkbox" tal:attributes="name row['JobID']; value row['JobID']">
                                                                        ${row['JobID']}
                                                                </label>
                                                            </span>
                                                            <span class="input-group-addon">
                                                                CPUs: <span tal:condition="python: 'ReqProcs' in row">${row['ReqProcs']}</span>
                                                            </span>
                                                            <input type="text" disabled class="form-control" aria-label="...">
                                                            <div class="input-group-btn">
                                                                <!-- Buttons -->
                                                                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Action <span class="caret"></span></button>
                                                                <ul class="dropdown-menu">
                                                                    <li><a title="Output" tal:attributes="href request.route_url('joboutput', jobid=row['JobID'])">Show joboutput</a></li>
                                                                    <li><a title="Details" tal:attributes="href request.route_url('job_details', jobid=row['JobID'])">Show details</a></li>
                                                                    <li><a title="Cancel" tal:condition="python: orderelement != 'completed'" tal:attributes="href request.route_url('cancel_job', jobid=row['JobID'])">Cancel</a></li>
                                                                </ul>
                                                                <a class="btn btn-default" title="Output" tal:attributes="href request.route_url('joboutput', jobid=row['JobID'])"><i class="fa fa-terminal"></i></a>
                                                                <a class="btn btn-default" title="Details" tal:attributes="href request.route_url('job_details', jobid=row['JobID'])"><i class="fa fa-search-plus"></i></a>
                                                                <a class="btn btn-danger" title="Cancel" tal:condition="python: orderelement != 'completed'" tal:attributes="href request.route_url('cancel_job', jobid=row['JobID'])"><i class="fa fa-ban"></i></a>
                                                            </div>
                                                        </div><!-- /input-group -->
                                                    </div><!-- /.col-lg-6 -->
                                                </div><!-- /.row -->
                                            </div>
                                            <div class="panel-body">
                                                <div class="row" tal:condition="python:('AWDuration' in row) and ('ReqAWDuration' in row)">
                                                    <div class="col-sm-6">Progress:</div>
                                                    <div class="col-sm-6">
                                                        <div class="progress">
                                                            <tal:block tal:define="progress min(int((float(row['AWDuration'])*100/float(row['ReqAWDuration']))), 100);
                                                                    resttime_min float((float(row['ReqAWDuration']) - float(row['AWDuration'])) / 60);
                                                                            resttime_h resttime_min/60">
                                                                <div class="progress-bar" role="progressbar"
                                                                        tal:attributes="aria-valuenow row['AWDuration']; aria-valuemax row['ReqAWDuration']"
                                                                     aria-valuemin="0" style="width: ${int((float(row['AWDuration'])*100/float(row['ReqAWDuration'])))}%;">
                                                                ${progress}%
                                                                </div>
                                                                <div class="progress-bar progress-bar-info" role="progressbar"
                                                                        tal:attributes="aria-valuenow row['AWDuration']; aria-valuemax row['ReqAWDuration']"
                                                                     aria-valuemin="0" style="width: ${100-progress}%;">
                                                                    <tal:block tal:condition="progress <= 95">
                                                                        <span tal:condition="progress <= 90">
                                                                            Restdauer:
                                                                        </span>
                                                                        <tal:block tal:switch="python: resttime_h <= 1">
                                                                            <span tal:case="True">${int(resttime_min)} min</span>
                                                                            <span tal:case="False">${int(resttime_h//1)}:${str(int(resttime_min-(resttime_h//1)*60)).zfill(2)} h</span>
                                                                        </tal:block>
                                                                    </tal:block>
                                                                </div>
                                                            </tal:block>
                                                        </div>
                                                    </div>
                                                </div>
                                                <tal:block tal:repeat="element ['SubmissionTime', 'StartTime', 'CompletionTime', 'ReqProcs', 'State', 'CompletionCode']">
                                                    <div class="row" tal:condition="python: element in row">
                                                        <div class="col-sm-6" tal:content="element"></div>
                                                        <div class="col-sm-6" tal:content="row[element]"></div>
                                                    </div>
                                                </tal:block>
                                                <tal:block tal:condition="exists:details">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <table class="table table-striped table-bordered table-responsive"
                                                                    tal:condition="python: ('JobID' in details) and (row['JobID'] == details['JobID'])">
                                                                <tr tal:repeat="(key, val) details.items()">
                                                                    <td style="font-weight: bold;" tal:content="key"></td>
                                                                    <td tal:content="val"></td>
                                                                </tr>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </tal:block>
                                                <tal:block tal:condition="exists:output">
                                                    <tal:block tal:condition="python: ('jobid' in output) and (row['JobID'] == output['jobid'])">
                                                        <div class="row">
                                                            <div class="col-sm-12">
                                                                <span tal:condition="python: 'type' in output">Source: ${output['type']}</span>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-sm-12">
                                                                <textarea class="col-sm-12" style="height: 300px; enabled: true;" tal:content="structure output['output']"></textarea>
                                                            </div>
                                                        </div>
                                                    </tal:block>
                                                </tal:block>
                                            </div>
                                        </div>
                                    </tal:block>
                                </div>
                            </div>
                        </div>
                    </div>
                </tal:block>
            </form>
            <a tal:attributes="href request.route_url('jobarchive')" class="btn btn-link">Archive</a>
        </div>
        <div class="col-sm-4">
            <div class="panel panel-default" id="jobsubmissionpanel">
                <div class="panel-heading">
                    <i class="fa fa-bell fa-fw"></i> New job submission
                </div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <div class="row error">
                        <div class="col-sm-12 errormessage">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    Information
                                </div>
                                <div class="panel-body">
                                </div>
                            </div>
                        </div>
                    </div>
                    <form method="POST" tal:attributes="action request.route_url('send_job', action='send')">

                        <div class="form-group">
                            <label for="environment">Cluster:
                                <select class="form-control" id="environment" name="environmentvariables">
                                    <option>Not yet implemented</option>
                                </select>
                            </label>
                        </div>

                        <div class="form-group">
                            <label for="scriptname">
                                Script:
                                <select id="scriptname" name="scriptname" class="form-control scriptselection" style="width:200px;"></select>
                            </label>
                        </div>

                        <div class="form-group">
                            <label for="scriptvariables">
                                Scriptvariable:
                                <input type="text" name="scriptvariables" id="scriptvariables" value="VP01" class="input-medium"/>
                            </label>
                        </div>

                        <div class="form-group">
                            <label for="nodes" class="col-sm-6">
                                Nodes:</label>
                            <input type="number" min="1" class="col-sm-6" max="64" pattern="[0-9]{1,2}" id="nodes" title="Nodes" name="nodes" value="1"/>

                        </div>

                        <div class="form-group">
                            <label for="ppn" class="col-sm-6">PPN:</label>
                            <input type="number" min="1" max="64" class="col-sm-6" pattern="[0-9]{1,2}" id="ppn" title="Procs" name="ppn" value="4"/>
                        </div>

                        <div class="form-group">
                            <label for="pmem" class="col-sm-6">
                                Memory:</label>
                            <input type="number" class="col-sm-6" min="1" max="64" pattern="[0-9]{1,2}" title="Memory" id="pmem" name="pmem" value="16"/>

                        </div>

                        <div class="form-group">
                            <label for="walltime" class="col-sm-6">
                                Walltime:</label>
                            <input type="text" class="col-sm-6" pattern="([0-9]{1,2}:[0-9]{2}:[0-9]{2}|[0-6]{1,2}h|[0-9]{1,2}min)" required placeholder="HH:mm:ss" id="walltime" title="Walltime" name="walltime"/>

                        </div>


                        <div class="row">
                            <div class="col-sm-6">
                                <button type="submit" class="btn btn-success" name="send_command">Send</button>
                            </div>
                            <div class="col-sm-6">
                                <button type="submit" class="btn btn-primary test_commands" name="test_commands">Test</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="panel panel-default" id="variables">
                <div class="panel-heading"><i class="fa fa-bell fa-fw"></i> Define variables</div>
                <!-- /.panel-heading -->
                <div class="panel-body">
                    <div class="form-group">
                        <label for="environment">Select environment:</label>
                        <select class="form-control" id="environment" name="environmentvariables">
                            <option>New one</option>
                        </select>
                    </div>

                    <div id="jsoneditor" style="height: 300px;"></div>


                    <div class="row">
                        <div class="col-sm-12">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <div class="panel-title">New Variable</div>
                                </div>
                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-sm-12">
                                            <label class="col-sm-6" for="new_variablename">Variablename:</label>
                                            <input type="text" id="new_variablename" name="new_variablename" class="input-medium"/>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <ul class="nav nav-pills newelement_typeselection">
                                            <li role="presentation" class="active"><a href="#" name="integer">Integers</a></li>
                                            <li role="presentation"><a href="#" name="formattedstring">Strings</a></li>
                                            <li role="presentation"><a href="#" name="clusterfile">File on cluster</a></li>
                                        </ul>
                                        <div class="selectiontype active" id="integer">
                                            <div class="input-group">
                                                <span class="input-group-addon" id="min_integer_new">Min</span>
                                                <input type="number" id="integermin" title="Min" name="mininteger" value="0" aria-describedby="min_integer_new" class="form-control"/>
                                            </div>

                                            <div class="input-group">
                                                <span class="input-group-addon" id="max_integer_new">Max</span>
                                                <input type="number" id="integermax" title="Max" name="maxinteger" value="9" aria-describedby="max_integer_new" class="form-control"/>
                                            </div>
                                            <div class="input-group">
                                                <span class="input-group-addon" id="step_integer_new">Step</span>
                                                <input type="number" id="integerstep" title="Step" name="stepinteger" value="1" aria-describedby="step_integer_new" class="form-control"/>
                                            </div>

                                        </div>
                                        <div class="selectiontype" id="formattedstring">
                                            Not yet implemented-formatted string
                                        </div>
                                        <div class="selectiontype" id="clusterfile">
                                            Not yet implemented - clusterfile
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <button class="btn btn-primary" name="addvariabletoenvironment">Add</button>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon">Combination generation:</span>
                                    <select class="form-control">
                                        <option value="all-combinations">All combinations</option>
                                        <option value="1-1-combination">1-1 combinations</option>
                                    </select>
                                    <span class="input-group-btn">
                                        <button class="btn btn-primary" name="sendvarstojob">Send to job</button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12">
                            <div class="form-group">
                                <div class="input-group">
                                    <span class="input-group-addon" id="environment_name">Environment</span>
                                    <input type="text" class="form-control" placeholder="Name" aria-describedby="environment_name" name="environment_name">
                                    <span class="input-group-btn">
                                        <button class="btn btn-success" name="savevarenvironemnt">Save environment</button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Generated commands</h4>
                </div>
                <div class="modal-body"></div>
                <div class="modal-footer">
                    <button type="button" name="sendcommands" class="btn btn-primary">Send commands</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="delete_confirmationmodal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <h4 class="modal-title">Confirm: job cancelation</h4>
                </div>
                <div class="modal-body">
                    <p>One fine body…</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary">Cancel jobs</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
</div>

<script>
    // create the editor
    var container = document.getElementById("jsoneditor");
    var options = {};
    window.editor = new JSONEditor(container, options);

    // set json
    var json = {};
    editor.set(json);

    // get json
    var json = editor.get();
</script>
</body>
</html>